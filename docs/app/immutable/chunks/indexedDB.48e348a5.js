const B=[{decorationType:1,bodyStroke:{color:"#000000",secondaryColor:"#000000"},style:0,body:{color:"#F6E0B2",secondaryColor:"#E7A27A"},decorationStroke:{},decoration:{},icing:{},icingStroke:{},filling:{color:"#F6E0B2",secondaryColor:"#BA555C",pattern:10},fillingTop:{color:"#C2977D",secondaryColor:"#E3B98F",pattern:4},midSection:!0,name:"Creamy strawberry"},{decorationType:3,bodyStroke:{color:"#000000",secondaryColor:"#000000"},style:0,body:{color:"#BA555C",secondaryColor:"#F6E0B2"},decorationStroke:{},decoration:{},icing:{},icingStroke:{},filling:{color:"#5D967F",secondaryColor:"#845C51",pattern:1},fillingTop:{},midSection:!0,name:"Raspberry choco"},{decorationType:6,bodyStroke:{color:"#000000",secondaryColor:"#000000"},style:1,body:{color:"#845C51",secondaryColor:"#5D967F"},decorationStroke:{},decoration:{},icing:{},icingStroke:{},filling:{color:"#61465F",secondaryColor:"#E7A27A",pattern:4},fillingTop:{},midSection:!1,name:"Simple caramel"},{decorationType:1,bodyStroke:{color:"#000000",secondaryColor:"#000000"},style:0,body:{color:"#F5E9C4",secondaryColor:"#EFAB64"},decorationStroke:{},decoration:{},icing:{},icingStroke:{},filling:{color:"#EFAB64",secondaryColor:"#E2816F",pattern:3},fillingTop:{},midSection:!0,name:"Simple pleasure"},{decorationType:9,bodyStroke:{color:"#000000",secondaryColor:"#000000"},style:1,body:{color:"#C2977D",secondaryColor:"#EFAB64"},decorationStroke:{},decoration:{color:"#61465F"},icing:{},icingStroke:{},filling:{color:"#E7A27A",secondaryColor:"#F6E0B2",pattern:9},fillingTop:{color:"#C2977D",secondaryColor:"#F5E9C4",pattern:8},midSection:!1,name:"Stracciatella magic"}],h=(e,o)=>o.some(n=>e instanceof n);let b,D;function I(){return b||(b=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function w(){return D||(D=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const S=new WeakMap,m=new WeakMap,g=new WeakMap,y=new WeakMap,C=new WeakMap;function k(e){const o=new Promise((n,t)=>{const i=()=>{e.removeEventListener("success",s),e.removeEventListener("error",r)},s=()=>{n(a(e.result)),i()},r=()=>{t(e.error),i()};e.addEventListener("success",s),e.addEventListener("error",r)});return o.then(n=>{n instanceof IDBCursor&&S.set(n,e)}).catch(()=>{}),C.set(o,e),o}function A(e){if(m.has(e))return;const o=new Promise((n,t)=>{const i=()=>{e.removeEventListener("complete",s),e.removeEventListener("error",r),e.removeEventListener("abort",r)},s=()=>{n(),i()},r=()=>{t(e.error||new DOMException("AbortError","AbortError")),i()};e.addEventListener("complete",s),e.addEventListener("error",r),e.addEventListener("abort",r)});m.set(e,o)}let p={get(e,o,n){if(e instanceof IDBTransaction){if(o==="done")return m.get(e);if(o==="objectStoreNames")return e.objectStoreNames||g.get(e);if(o==="store")return n.objectStoreNames[1]?void 0:n.objectStore(n.objectStoreNames[0])}return a(e[o])},set(e,o,n){return e[o]=n,!0},has(e,o){return e instanceof IDBTransaction&&(o==="done"||o==="store")?!0:o in e}};function F(e){p=e(p)}function T(e){return e===IDBDatabase.prototype.transaction&&!("objectStoreNames"in IDBTransaction.prototype)?function(o,...n){const t=e.call(f(this),o,...n);return g.set(t,o.sort?o.sort():[o]),a(t)}:w().includes(e)?function(...o){return e.apply(f(this),o),a(S.get(this))}:function(...o){return a(e.apply(f(this),o))}}function M(e){return typeof e=="function"?T(e):(e instanceof IDBTransaction&&A(e),h(e,I())?new Proxy(e,p):e)}function a(e){if(e instanceof IDBRequest)return k(e);if(y.has(e))return y.get(e);const o=M(e);return o!==e&&(y.set(e,o),C.set(o,e)),o}const f=e=>C.get(e);function L(e,o,{blocked:n,upgrade:t,blocking:i,terminated:s}={}){const r=indexedDB.open(e,o),l=a(r);return t&&r.addEventListener("upgradeneeded",c=>{t(a(r.result),c.oldVersion,c.newVersion,a(r.transaction),c)}),n&&r.addEventListener("blocked",c=>n(c.oldVersion,c.newVersion,c)),l.then(c=>{s&&c.addEventListener("close",()=>s()),i&&c.addEventListener("versionchange",d=>i(d.oldVersion,d.newVersion,d))}).catch(()=>{}),l}const P=["get","getKey","getAll","getAllKeys","count"],j=["put","add","delete","clear"],u=new Map;function E(e,o){if(!(e instanceof IDBDatabase&&!(o in e)&&typeof o=="string"))return;if(u.get(o))return u.get(o);const n=o.replace(/FromIndex$/,""),t=o!==n,i=j.includes(n);if(!(n in(t?IDBIndex:IDBObjectStore).prototype)||!(i||P.includes(n)))return;const s=async function(r,...l){const c=this.transaction(r,i?"readwrite":"readonly");let d=c.store;return t&&(d=d.index(l.shift())),(await Promise.all([d[n](...l),i&&c.done]))[0]};return u.set(o,s),s}F(e=>({...e,get:(o,n,t)=>E(o,n)||e.get(o,n,t),has:(o,n)=>!!E(o,n)||e.has(o,n)}));const x="byMona";async function V(){return await L(x,1,{upgrade(e){const o=e.createObjectStore("cakes",{keyPath:"id",autoIncrement:!0});o.createIndex("byName","name"),o.createIndex("byPrintOrder","printOrder"),B.map(n=>o.add(n))}})}export{B as D,V as c};
